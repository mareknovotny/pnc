<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.jboss.pnc</groupId>
		<artifactId>parent</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>docker-environment-driver</artifactId>

	<properties>
		<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
		<jboss.version>8.2.0.Final</jboss.version>
		<app.server>wildfly</app.server>
		<test.server.unpack.dir>${project.build.directory}</test.server.unpack.dir>
		<test.server.build.dir>${test.server.unpack.dir}/${app.server}-${jboss.version}</test.server.build.dir>
	</properties>

	<dependencies>

		<!-- Project dependencies -->
		<dependency>
			<groupId>org.jboss.pnc</groupId>
			<artifactId>pnc-model</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.pnc</groupId>
			<artifactId>common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.pnc</groupId>
			<artifactId>pnc-spi</artifactId>
		</dependency>

		<!-- Remote dependencies -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-common-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- /Remote dependencies -->

		<!-- JClouds -->
		<dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.labs</groupId>
			<artifactId>docker</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-compute</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-sshj</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-slf4j</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<!-- /JClouds -->


		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-transaction-jta</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-arquillian-container-embedded</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly</groupId>
			<artifactId>wildfly-embedded</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- /Test dependencies -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack-wildfly</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.wildfly</groupId>
									<artifactId>wildfly-dist</artifactId>
									<version>${jboss.version}</version>
									<type>zip</type>
									<overWrite>true</overWrite>
									<outputDirectory>${test.server.unpack.dir}</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.wildfly.plugins</groupId>
				<artifactId>wildfly-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<systemPropertyVariables>
						<pnc-config-file>/pnc-config.json</pnc-config-file>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<jboss.home>${test.server.build.dir}</jboss.home>
						<module.path>${test.server.build.dir}/modules</module.path>
					</systemPropertyVariables>
					<redirectTestOutputToFile>false</redirectTestOutputToFile>
				</configuration>
			</plugin>
		</plugins>

	</build>

    <profiles>
        <!-- testing Dockerfile image  -->
        <profile>
            <id>docker-test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jolokia</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.11.2</version>
                        <configuration>
                            <dockerHost>http://${env.PNC_DOCKER_IP}:2375</dockerHost>
                            <sourceDirectory>src/main/resources/isolatedDockerConfiguration</sourceDirectory>
                            <images>
                                <image>
                                    <name>${env.PNC_DOCKER_IMAGE_ID}</name>
                                    <alias>pnc-jenkins</alias>
                                    <build>
                                        <volumes>
                                            <volume>/var/jenkins_home</volume>
                                        </volumes>
                                    </build>
                                    <run>
                                        <privileged>true</privileged>
                                        <ports>
                                            <port>${env.PNC_JENKINS_PORT}:8080</port>
                                        </ports>
                                        <wait>
                                          <url>${env.PNC_JENKINS_URL}:${env.PNC_JENKINS_PORT}</url>
                                          <time>10000</time>
                                          <shutdown>500</shutdown>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the artefacts -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>
        </profile>
    
    </profiles>
    
</project>
